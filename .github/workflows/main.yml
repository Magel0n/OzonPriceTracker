name: Quality Requirements Satisfaction

on: [push, pull_request]

jobs:
  maintainability:
    runs-on: ubuntu-latest
    name: Running pytest, coverage reports
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install poetry
        uses: abatilo/actions-poetry@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage
          poetry install

      - name: pytesting
        run: |
          poetry run pytest -s --cov=app/ test/
          poetry run pytest -s --cov=app/ --cov-branch test/
          poetry run coverage report --fail-under=60

  reliability:
    runs-on: ubuntu-latest
    name: Linting with flake8 and ruff
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install poetry
        uses: abatilo/actions-poetry@v4

      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          args: "--exclude=test/*"

      - name: Ruff Lint
        uses: astral-sh/ruff-action@v3
        with:
          version: "0.11.8"
          config: "ruff.toml"

  security:
    runs-on: ubuntu-latest
    name: Security checks via bandit, snyk
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'

      - name: Install poetry
        uses: abatilo/actions-poetry@v4

      - name: Poetry preparation
        run: poetry install

      - name: Run Bandit
        run: poetry run bandit -r app/ -x test/

      - name: Run Snyk for only severe vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --exclude=test/**

  # performance:
  #   runs-on: ubuntu-latest
  #   name: locust usage

  deploy:
    runs-on: ubuntu-latest
    needs: [maintainability, reliability, security]
    steps:
      - run: echo "This is where Deployment should happen"
